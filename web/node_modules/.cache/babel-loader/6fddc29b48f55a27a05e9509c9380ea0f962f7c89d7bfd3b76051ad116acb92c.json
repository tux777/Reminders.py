{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Reminders.py/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/navbar';\nimport Reminder from './components/reminder/reminder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction fetchReminders() {\n  return fetch('http://localhost:4000/reminders').then(response => response.json());\n}\nfunction App() {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  useEffect(() => {\n    fetchReminders().then(data => {\n      setReminders(data.map((reminder, index) => {\n        return /*#__PURE__*/_jsxDEV(Reminder, {\n          reminderName: reminder.title,\n          reminderDescription: reminder.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 24\n        }, this);\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"remindersWrapper\",\n      children: reminders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Ywom95O85bhmIGDtbxAAvIW1S3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Navbar","Reminder","jsxDEV","_jsxDEV","fetchReminders","fetch","then","response","json","App","_s","reminders","setReminders","data","map","reminder","index","reminderName","title","reminderDescription","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","id","_c","$RefreshReg$"],"sources":["/Users/john/Desktop/Reminders.py/web/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/navbar';\nimport Reminder from './components/reminder/reminder';\n\nfunction fetchReminders() {\n    return fetch('http://localhost:4000/reminders')\n        .then(response => response.json())\n}\n\nfunction App() {\n    const [reminders, setReminders] = useState([]);\n    useEffect(() => {\n        fetchReminders().then(data => {\n            setReminders(data.map((reminder, index) => {\n                return <Reminder reminderName={reminder.title} reminderDescription={reminder.message} />\n            }))\n        })\n    }, []);\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <ul id={\"remindersWrapper\"}>\n                {reminders}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,cAAcA,CAAA,EAAG;EACtB,OAAOC,KAAK,CAAC,iCAAiC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AAC1C;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACZK,cAAc,CAAC,CAAC,CAACE,IAAI,CAACO,IAAI,IAAI;MAC1BD,YAAY,CAACC,IAAI,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACvC,oBAAOb,OAAA,CAACF,QAAQ;UAACgB,YAAY,EAAEF,QAAQ,CAACG,KAAM;UAACC,mBAAmB,EAAEJ,QAAQ,CAACK;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5F,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBvB,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA;MAAIwB,EAAE,EAAE,kBAAmB;MAAAD,QAAA,EACtBf;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACd,EAAA,CAjBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}