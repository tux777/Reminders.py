{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Reminders.py/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { v4 } from \"uuid\";\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/navbar';\nimport Reminder from './components/reminder/reminder';\nimport Popup from './components/popup/popup';\nimport PopupContext from \"./components/contexts/popupContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction fetchReminders() {\n  return fetch('http://localhost:4000/reminders').then(response => {\n    return response.json().then(data => {\n      return data;\n    }).catch(err => {\n      console.error(\"Error parsing JSON: \" + err);\n    });\n  });\n}\nfunction App() {\n  _s();\n  const [reminderJson, setReminderJson] = useState({}); // [name: message\n  const [reminders, setReminders] = useState([]);\n  const [popupState, setPopupState] = useState(true);\n  const [popupType, setPopupType] = useState(\"confirmation\");\n  const [reminderToDelete, setReminderToDelete] = useState(\"\");\n  const [queue, setQueue] = useState([]);\n  function addToQueue(item) {\n    let newQueue = queue;\n    newQueue.push(item);\n    setQueue(newQueue);\n  }\n  function convertJSONToReminders(json) {\n    for (let i = 0; i < Object.keys(json).length; i++) {\n      const name = Object.keys(json)[i];\n      const dataValues = Object.values(json)[i];\n      const id = v4();\n      return /*#__PURE__*/_jsxDEV(Reminder, {\n        reminderName: name,\n        reminderId: id,\n        reminderDescription: dataValues.message\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  useEffect(() => {\n    let newReminders = [];\n    fetchReminders().then(data => {\n      console.log(`Data: ${data}, Keys: ${Object.keys(data)}`);\n      data.forEach(key => {\n        newReminders.push(convertJSONToReminders(key));\n      });\n    }).then(() => {\n      setReminders(newReminders);\n    }).catch(err => {\n      console.error(\"Error fetching reminders: \" + err);\n    });\n  }, []);\n  window.addEventListener(\"beforeunload\", e => {\n    if (queue.length > 0) {\n      e.preventDefault();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(PopupContext.Provider, {\n    value: {\n      popupState,\n      setPopupState,\n      popupType,\n      setPopupType,\n      reminderToDelete,\n      setReminderToDelete,\n      addToQueue,\n      setQueue,\n      queue,\n      reminders,\n      setReminders\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          setPopupState: setPopupState,\n          popupState: popupState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"remindersWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Reminder, {\n            reminderDescription: \"Test\",\n            reminderName: \"This is a test reminder object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Reminder, {\n            reminderDescription: \"Test\",\n            reminderName: \"This is a test reminder object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Reminder, {\n            reminderDescription: \"Test\",\n            reminderName: \"This is a test reminder object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), reminders]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"FGmigcSKsEmu0YOPzOtvnZjkdm4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["v4","useState","useEffect","Navbar","Reminder","Popup","PopupContext","jsxDEV","_jsxDEV","fetchReminders","fetch","then","response","json","data","catch","err","console","error","App","_s","reminderJson","setReminderJson","reminders","setReminders","popupState","setPopupState","popupType","setPopupType","reminderToDelete","setReminderToDelete","queue","setQueue","addToQueue","item","newQueue","push","convertJSONToReminders","i","Object","keys","length","name","dataValues","values","id","reminderName","reminderId","reminderDescription","message","fileName","_jsxFileName","lineNumber","columnNumber","newReminders","log","forEach","key","window","addEventListener","e","preventDefault","Provider","value","children","className","_c","$RefreshReg$"],"sources":["/Users/john/Desktop/Reminders.py/web/src/App.js"],"sourcesContent":["import { v4 } from \"uuid\";\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar/navbar';\nimport Reminder from './components/reminder/reminder';\nimport Popup from './components/popup/popup';\nimport PopupContext from \"./components/contexts/popupContext\";\n\nfunction fetchReminders() {\n    return fetch('http://localhost:4000/reminders')\n        .then(response => {\n              return response.json().then(data => {\n                  return data;\n              }).catch(err => {\n                  console.error(\"Error parsing JSON: \" + err);\n              });\n        })\n}\n\nfunction App() {\n    const [reminderJson, setReminderJson] = useState({}); // [name: message\n    const [reminders, setReminders] = useState([]);\n    const [popupState, setPopupState] = useState(true);\n    const [popupType, setPopupType] = useState(\"confirmation\");\n    const [reminderToDelete, setReminderToDelete] = useState(\"\");\n    const [queue, setQueue] = useState([]);\n\n    function addToQueue(item) {\n        let newQueue = queue;\n        newQueue.push(item);\n        setQueue(newQueue);\n    }\n\n    function convertJSONToReminders(json) {\n        for (let i = 0; i < Object.keys(json).length; i++) {\n            const name = Object.keys(json)[i];\n            const dataValues = Object.values(json)[i];\n            const id = v4();\n            return <Reminder reminderName={name} reminderId={id} key={id} reminderDescription={dataValues.message}/>;\n        }\n    }\n\n    useEffect(() => {\n        let newReminders = [];\n        fetchReminders().then(data => {\n            console.log(`Data: ${data}, Keys: ${Object.keys(data)}`)\n            data.forEach((key) => {\n                 newReminders.push(convertJSONToReminders(key))\n            });\n        }).then(() => {\n            setReminders(newReminders);\n        }).catch(err => {\n            console.error(\"Error fetching reminders: \" + err);\n        });\n    }, []);\n\n\n\n    window.addEventListener(\"beforeunload\", (e) => {\n        if (queue.length > 0) {\n            e.preventDefault();\n        }\n    })\n\n    return (\n        <PopupContext.Provider value={{popupState, setPopupState, popupType, setPopupType, reminderToDelete, setReminderToDelete, addToQueue, setQueue, queue, reminders, setReminders}}>\n            <div className=\"App\">\n                <div id={\"main\"}>\n                    <Navbar setPopupState={setPopupState} popupState={popupState}/>\n                    <ul id={\"remindersWrapper\"}>\n                        <Reminder reminderDescription={\"Test\"} reminderName={\"This is a test reminder object\"}/>\n                        <Reminder reminderDescription={\"Test\"} reminderName={\"This is a test reminder object\"}/>\n                        <Reminder reminderDescription={\"Test\"} reminderName={\"This is a test reminder object\"}/>\n                        {reminders}\n                    </ul>\n                </div>\n                <Popup/>\n            </div>\n        </PopupContext.Provider>\n\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}