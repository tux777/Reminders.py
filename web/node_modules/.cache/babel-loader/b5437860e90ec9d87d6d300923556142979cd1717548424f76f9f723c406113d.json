{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Reminders.py/web/src/components/popup/popup.js\",\n  _s = $RefreshSig$();\nimport './popup.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popup(props) {\n  _s();\n  const [popupState, setPopupState] = useState(false);\n  function togglePopupState() {\n    setPopupState(!popupState);\n  }\n  switch (props.popupType) {\n    case 'save':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup savePopup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popupInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"popupTitle\",\n            children: \"Save Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"popupDescription\",\n            children: \"Would you like to save your reminders?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"popupWarning\",\n            children: \"saving your reminders will clear your queue of undos and redos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popupActions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"popupSaveButton\",\n            className: \"important-button button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fi fi-sr-disk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 94\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"important-button-text\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"popupCancelButton\",\n            className: \"button\",\n            onClick: togglePopupState,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"important-button-text\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 106\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    case 'confirmation':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup confirmationPopup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    case 'error':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup errorPopup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n  }\n}\n_s(Popup, \"SrUW0jguEy+5htHKHYVnP2XnQAA=\");\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Popup","props","_s","popupState","setPopupState","togglePopupState","popupType","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/john/Desktop/Reminders.py/web/src/components/popup/popup.js"],"sourcesContent":["import './popup.css'\nimport {useState} from \"react\";\n\nfunction Popup(props) {\n    const [popupState, setPopupState] = useState(false);\n\n    function togglePopupState() {\n        setPopupState(!popupState);\n    }\n\n    switch (props.popupType) {\n        case 'save':\n            return (\n                <div className={\"popup savePopup\"}>\n                    <div id={\"popupInfo\"}>\n                        <h1 id={\"popupTitle\"}>Save Reminders</h1>\n                        <p id={\"popupDescription\"}>Would you like to save your reminders?</p>\n                        <p id={\"popupWarning\"}>saving your reminders will clear your queue of undos and redos</p>\n                    </div>\n                    <div id={\"popupActions\"}>\n                        <button id={\"popupSaveButton\"} className={\"important-button button\"}><i\n                            className={\"fi fi-sr-disk\"}/><span className={\"important-button-text\"}>Save</span></button>\n                        <button id={\"popupCancelButton\"} className={\"button\"} onClick={togglePopupState}><span\n                            className={\"important-button-text\"}>Cancel</span></button>\n                    </div>\n                </div>\n            );\n        case 'confirmation':\n            return (\n                <div className={\"popup confirmationPopup\"}></div>\n            );\n\n        case 'error':\n            return (\n                <div className={\"popup errorPopup\"}></div>\n            );\n    }\n}\n\nexport default Popup;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASQ,gBAAgBA,CAAA,EAAG;IACxBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B;EAEA,QAAQF,KAAK,CAACK,SAAS;IACnB,KAAK,MAAM;MACP,oBACIP,OAAA;QAAKQ,SAAS,EAAE,iBAAkB;QAAAC,QAAA,gBAC9BT,OAAA;UAAKU,EAAE,EAAE,WAAY;UAAAD,QAAA,gBACjBT,OAAA;YAAIU,EAAE,EAAE,YAAa;YAAAD,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCd,OAAA;YAAGU,EAAE,EAAE,kBAAmB;YAAAD,QAAA,EAAC;UAAsC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACrEd,OAAA;YAAGU,EAAE,EAAE,cAAe;YAAAD,QAAA,EAAC;UAA8D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACNd,OAAA;UAAKU,EAAE,EAAE,cAAe;UAAAD,QAAA,gBACpBT,OAAA;YAAQU,EAAE,EAAE,iBAAkB;YAACF,SAAS,EAAE,yBAA0B;YAAAC,QAAA,gBAACT,OAAA;cACjEQ,SAAS,EAAE;YAAgB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAAAd,OAAA;cAAMQ,SAAS,EAAE,uBAAwB;cAAAC,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/Fd,OAAA;YAAQU,EAAE,EAAE,mBAAoB;YAACF,SAAS,EAAE,QAAS;YAACO,OAAO,EAAET,gBAAiB;YAAAG,QAAA,eAACT,OAAA;cAC7EQ,SAAS,EAAE,uBAAwB;cAAAC,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAEd,KAAK,cAAc;MACf,oBACId,OAAA;QAAKQ,SAAS,EAAE;MAA0B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAGzD,KAAK,OAAO;MACR,oBACId,OAAA;QAAKQ,SAAS,EAAE;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;EAEtD;AACJ;AAACX,EAAA,CAlCQF,KAAK;AAAAe,EAAA,GAALf,KAAK;AAoCd,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}