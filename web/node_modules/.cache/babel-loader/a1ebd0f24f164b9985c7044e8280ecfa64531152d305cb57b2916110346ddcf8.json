{"ast":null,"code":"var _jsxFileName = \"/Users/john/Desktop/Reminders.py/web/src/components/popup/popup.js\";\nimport './popup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popup(props) {\n  function togglePopupState() {\n    props.setPopupState(!props.popupState);\n  }\n  if (props.popupState === false) {\n    return null;\n  }\n  switch (props.popupType) {\n    case 'save':\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    case 'confirmation':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup confirmationPopup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    case 'error':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup errorPopup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popupWrapper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_c = Popup;\nexport default Popup;\nvar _c;\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Popup","props","togglePopupState","setPopupState","popupState","popupType","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/john/Desktop/Reminders.py/web/src/components/popup/popup.js"],"sourcesContent":["import './popup.css'\n\nfunction Popup(props) {\n\n    function togglePopupState() {\n        props.setPopupState(!props.popupState);\n    }\n\n    if (props.popupState === false) {\n        return null;\n    }\n\n    switch (props.popupType) {\n        case 'save':\n            return (\n                <div></div>\n            )\n        case 'confirmation':\n            return (\n                <div className={\"popup confirmationPopup\"}></div>\n            );\n\n        case 'error':\n            return (\n                <div className={\"popup errorPopup\"}></div>\n            );\n    }\n\n    return (\n        <div className={\"popupWrapper\"}>\n            \n        </div>\n    )\n}\n\nexport default Popup;"],"mappings":";AAAA,OAAO,aAAa;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAEpB,SAASC,KAAKA,CAACC,KAAK,EAAE;EAElB,SAASC,gBAAgBA,CAAA,EAAG;IACxBD,KAAK,CAACE,aAAa,CAAC,CAACF,KAAK,CAACG,UAAU,CAAC;EAC1C;EAEA,IAAIH,KAAK,CAACG,UAAU,KAAK,KAAK,EAAE;IAC5B,OAAO,IAAI;EACf;EAEA,QAAQH,KAAK,CAACI,SAAS;IACnB,KAAK,MAAM;MACP,oBACIN,OAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAEnB,KAAK,cAAc;MACf,oBACIV,OAAA;QAAKW,SAAS,EAAE;MAA0B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAGzD,KAAK,OAAO;MACR,oBACIV,OAAA;QAAKW,SAAS,EAAE;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;EAEtD;EAEA,oBACIV,OAAA;IAAKW,SAAS,EAAE;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEd;AAACE,EAAA,GA/BQX,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}